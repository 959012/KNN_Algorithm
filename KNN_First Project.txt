import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sb
data = pd.read_csv(io.BytesIO(uploaded['Classifier Data.csv']))
from sklearn.preprocessing import StandardScaler
scaller = StandardScaler()
scaller.fit(data.drop('TARGET CLASS', axis =1))
scaler_feature = scaller.transform(data.drop('TARGET CLASS', axis =1))
df = pd.DataFrame(scaler_feature,columns=data.columns[:-1])
df.head()
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(scaler_feature,data['TARGET CLASS'],test_size= 0.30)
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(x_train,y_train)
pre=knn.predict(x_test)
from sklearn.metrics import confusion_matrix,classification_report
confusion_matrix(y_test,pre)
print(classification_report(y_test,pre))
error_rate =[]
for i in range(1,40):
    knn = KNeighborsClassifier(n_neighbors=i)
    knn.fit(x_train,y_train)
    pred_i = knn.predict(x_test)
    error_rate.append(np.mean(pred_i != y_test))
plt.figure(figsize=(10,6))
plt.plot(range(1,40),error_rate,color='blue', linestyle='dashed', marker='o',
         markerfacecolor='red', markersize=10)
plt.title('Error Rate vs. K Value')
plt.xlabel('K')
plt.ylabel('Error Rate')
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=10)
knn.fit(x_train,y_train)
pre=knn.predict(x_test)
confusion_matrix(y_test,pre)
print(classification_report(y_test,pre))
